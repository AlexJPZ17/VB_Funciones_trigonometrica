<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>